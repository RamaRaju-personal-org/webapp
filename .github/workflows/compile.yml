name: compile workflow

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Complie check
    runs-on: ubuntu-latest

    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14 

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-deps-${{ hashFiles('**/package-lock.json') }} 

      - name: Install dependencies
        run: npm install

      - name: Setup .env file
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "TOKEN_SECRET=${{ secrets.TOKEN_SECRET}}" >> .env

      - name: MySQL Setup
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          sudo systemctl start mysql
          sudo systemctl status mysql
          sudo mysql -u root -p root -e "CREATE DATABASE  restapi;"


      - name: Test App
        run: npm test healthz.test.js

      # - name: Test failure 
      #   run: exit 1
  
  
  test:
    name: integration test
    runs-on: ubuntu-latest

    

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14 

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-deps-${{ hashFiles('**/package-lock.json') }} 

      - name: Install dependencies
        run: npm install

      - name: Setup .env file
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "TOKEN_SECRET=${{ secrets.TOKEN_SECRET}}" >> .env

      - name: Configure MySQL
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          sudo systemctl start mysql
          sudo systemctl status mysql
          sudo mysql -u root -p root -e "CREATE DATABASE  restapi;"


      - name: Test App
        run: npm test user.test.js
